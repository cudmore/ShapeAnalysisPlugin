{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome. This is the user documentation for the Napari shape analysis plugin. What it does and why it is great ... Using the Napari viewer , any number of shapes/ROIs can be created directly on top of multi-dimensional images. Shapes/ROIs are easily analyzed to extract parameters and plot the results. Shapes/ROIs and their analysis can be saved and then loaded again. Once shapes/ROIs are analyzed with the graphical user interface (GUI), additional analysis can be perfromed with super simple pYthon scripts. Analysis is implemented to be fast by utilizing all CPU cores with Python's multiprocessing libraries . As we develop this, we are in close contact with the Napari developers at The Chan/Zuckerberg Initiative who are consistently rolling out exciting new features and cutting edge improvements. Example screenshot On the left is the Napari viewer with a time-series of images, basically a video recording. The Napari viewer has two shapes, a line (blue) and a rectangle (orange). Shapes can easily be created, deleted, and edited using the Napari interface. On the right is the Shape Analysis Plugin interface with four plots. The top plot is showing the line intensity profile along the line shape (white), a gaussian fit (red), and a best guess of the diameter of the line intensity profile (blue). The second plot is showing the best guess of the diameter for each frame in the time-series. The third plot is an image where the line intensity profile of each frame in the time-seriesis vertical. The fourth plot is showing the mean image intensity inside the rectangular shape/ROI, one value per image frame in the time-series. As the user drags the slider to scroll through image frames in the time-series, all the plots are updated. For the bottom three plots, the currently viwed image frame is denoted by a vertical white/yellow bar.","title":"Home"},{"location":"#what-it-does-and-why-it-is-great","text":"Using the Napari viewer , any number of shapes/ROIs can be created directly on top of multi-dimensional images. Shapes/ROIs are easily analyzed to extract parameters and plot the results. Shapes/ROIs and their analysis can be saved and then loaded again. Once shapes/ROIs are analyzed with the graphical user interface (GUI), additional analysis can be perfromed with super simple pYthon scripts. Analysis is implemented to be fast by utilizing all CPU cores with Python's multiprocessing libraries . As we develop this, we are in close contact with the Napari developers at The Chan/Zuckerberg Initiative who are consistently rolling out exciting new features and cutting edge improvements.","title":"What it does and why it is great ..."},{"location":"#example-screenshot","text":"On the left is the Napari viewer with a time-series of images, basically a video recording. The Napari viewer has two shapes, a line (blue) and a rectangle (orange). Shapes can easily be created, deleted, and edited using the Napari interface. On the right is the Shape Analysis Plugin interface with four plots. The top plot is showing the line intensity profile along the line shape (white), a gaussian fit (red), and a best guess of the diameter of the line intensity profile (blue). The second plot is showing the best guess of the diameter for each frame in the time-series. The third plot is an image where the line intensity profile of each frame in the time-seriesis vertical. The fourth plot is showing the mean image intensity inside the rectangular shape/ROI, one value per image frame in the time-series. As the user drags the slider to scroll through image frames in the time-series, all the plots are updated. For the bottom three plots, the currently viwed image frame is denoted by a vertical white/yellow bar.","title":"Example screenshot"},{"location":"install/","text":"This is a recipe for installing the Shape Analysis Plugin for Napari . You can try to use our install script. This will only work on macOS and Linux. ./install If that works, then run Napari with the plugin using ./run If the above fails for whatever reason, use the following 3 steps... 1) Download or clone the code Option 1 , Download the repository as a .zip file and extract its contents Option 2 , Use git to clone the repository with git clone https://github.com/cudmore/ShapeAnalysisPlugin.git 2) Install required Python packages Assuming you have Python 3.7.x , pip , and venv cd ShapeAnalysisPlugin python3 -m venv env # create a virtual environment in folder 'env' source env/bin/activate # activate the virtual environment pip install -r requirements.txt 3) Run cd shapeanalysisplugin python3 ShapeAnalysisPlugin.py","title":"Installation"},{"location":"install/#1-download-or-clone-the-code","text":"Option 1 , Download the repository as a .zip file and extract its contents Option 2 , Use git to clone the repository with git clone https://github.com/cudmore/ShapeAnalysisPlugin.git","title":"1) Download or clone the code"},{"location":"install/#2-install-required-python-packages","text":"Assuming you have Python 3.7.x , pip , and venv cd ShapeAnalysisPlugin python3 -m venv env # create a virtual environment in folder 'env' source env/bin/activate # activate the virtual environment pip install -r requirements.txt","title":"2) Install required Python packages"},{"location":"install/#3-run","text":"cd shapeanalysisplugin python3 ShapeAnalysisPlugin.py","title":"3) Run"},{"location":"interface/","text":"The Shape Analysis Plugin uses keyboard commands for its user interaction. We will improve this in the near future. l: Create new line shape (l as in Larry) r: Create new rectangle shape Delete: Delete selected shape u: Update analysis on selected shape Command+Shift+L: Load h5f file (prompt user for file) Command+l: Load default h5f file (each .tif has corresponding h5f file) Command+s: Save default h5f file (each .tif has corresponding h5f file)","title":"Interface"},{"location":"troubleshooting/","text":"Installation We assume you have some basics installed on your computer. These include: Python pip virtual environment. Once this is all done, you can proceed with the general install instructions. Install Python downloaded and then follow the instructions for installation. Install pip python3 -m pip install --user --upgrade pip Install VirtialEnv (env) python3 -m pip install --user virtualenv Runtime There was a bug in the multiprocessng package for Python 3.7.x. todo: add info on error user will get and how to fix it.","title":"Troubleshooting"},{"location":"troubleshooting/#installation","text":"We assume you have some basics installed on your computer. These include: Python pip virtual environment. Once this is all done, you can proceed with the general install instructions.","title":"Installation"},{"location":"troubleshooting/#install-python","text":"downloaded and then follow the instructions for installation.","title":"Install Python"},{"location":"troubleshooting/#install-pip","text":"python3 -m pip install --user --upgrade pip","title":"Install pip"},{"location":"troubleshooting/#install-virtialenv-env","text":"python3 -m pip install --user virtualenv","title":"Install VirtialEnv (env)"},{"location":"troubleshooting/#runtime","text":"There was a bug in the multiprocessng package for Python 3.7.x. todo: add info on error user will get and how to fix it.","title":"Runtime"}]}